AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  eventbridge-test

Globals:
  Function:
    Timeout: 3
    Environment:
      Variables:
        EVENT_BUS: !Ref CustomEventBus

Resources:

  CustomEventBus:
    Type: AWS::Events::EventBus
    Properties: 
      Name: my-event-bus

  PublishEventsLamda:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: publish_events
      Handler: app.lambda_handler
      Runtime: python3.7
      Tracing: Active
      Policies:
        - EventBridgePutEventsPolicy:
            EventBusName: !Ref CustomEventBus
      Events:
        CWSchedule:
          Type: Schedule
          Properties:
            Schedule: 'rate(1 minute)'
            Name: TriggerPuchlishLambdaSchedule
            Description: Trigger Publish event lambda.
            Enabled: true

  LargeOrderEventLambda:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: large_order
      Handler: app.lambda_handler
      Runtime: python3.7
      Tracing: Active
      Events:
        EventBridge:
          Type: CloudWatchEvent
          Properties:
            EventBusName: !Ref CustomEventBus
            Pattern:
              source:
                - com.mycompany.myapp
              detail-type:
                - OrderCreated
              detail:
                OrderValue: [ {"numeric": ["<", 100]} ]

  SmallOrderEventLambda:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: small_order
      Handler: app.lambda_handler
      Runtime: python3.7
      Tracing: Active
      Events:
        EventBridge:
          Type: CloudWatchEvent
          Properties:
            EventBusName: !Ref CustomEventBus
            Pattern:
              source:
                - com.mycompany.myapp
              detail-type:
                - OrderCreated
              detail:
                OrderValue: [ {"numeric": [">", 100]} ]

  CancelOrderEventLambda:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: cancel_order
      Handler: app.lambda_handler
      Runtime: python3.7
      Tracing: Active
      Events:
        EventBridge:
          Type: CloudWatchEvent
          Properties:
            EventBusName: !Ref CustomEventBus
            Pattern:
              source:
                - com.mycompany.myapp
              detail-type:
                - OrderCanceled

Outputs:
  LargeOrderEventLambda:
    Description: "LargeOrderEventLambda ARN"
    Value: !GetAtt LargeOrderEventLambda.Arn
  SmallOrderEventLambda:
    Description: "SmallOrderEventLambda ARN"
    Value: !GetAtt SmallOrderEventLambda.Arn
  CancelOrderEventLambda:
    Description: "CancelOrderEventLambda ARN"
    Value: !GetAtt CancelOrderEventLambda.Arn
  PublishEventsLamda:
    Description: "PublishEventsLamda ARN"
    Value: !GetAtt PublishEventsLamda.Arn
  CustomEventBus:
    Description: CustomEventBus
    Value: !Ref CustomEventBus

    